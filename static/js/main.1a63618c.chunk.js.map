{"version":3,"sources":["components/header.js","functions/helper.js","components/sideNav.js","components/contentWrapper.js","components/chartWrapper.js","functions/loansByTypeHelp.js","components/chartTip.js","components/xAxis.js","components/yAxis.js","components/title.js","components/loansByItemType.js","functions/getData.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","display","margin","paddingTop","spacing","textAlign","Header","siteTitle","subTitle","classes","className","Typography","variant","component","makeId","str","replace","toLowerCase","getDataByTitle","data","title","map","o","indexOf","minMax","arr","min","max","position","paddingLeft","marginTop","link","color","palette","text","primary","secondary","borderLeft","main","active","ListItemLink","props","Hidden","smDown","ListItem","SideNav","titles","ids","items","currentClassName","i","href","ListItemText","maxWidth","padding","ContentWrapper","children","overflow","cardHelper","ChartWrapper","Card","CardContent","dataDates","d","forEach","row","r","monthString","month","Month","jsDate","DateTime","fromISO","plus","months","days","toJSDate","tooltip","marginLeft","left","top","transform","visibility","visible","background","grey","opacity","contrastText","borderRadius","shape","ChartTip","xAxis","fill","fontSize","fontFamily","tickTextX","stroke","textAnchor","tickTextY","XAxis","height","tickArray","scale","tickFunction","x","x1","x2","Children","toArray","t","y2","y","dy","YAxis","yAxis","y1","style","alignmentBaseline","Title","d3","select","scaleLinear","scaleOrdinal","scaleTime","line","schemeTableau10","axisLeft","axisBottom","strokeWidth","cursor","selected","circle","legend","legendText","LoansByItemType","id","useState","initData","keys","res","k","Array","from","rollup","sum","Loans","Type","m","groupData","chartData","setWidth","setHeight","lineTipY","setLineTipY","lineTipVisible","setLineTipVisible","lineTipText","setLineTipText","circleTipPos","setCircleTipPos","circleTipVisible","setCircleTipVisible","type","loans","circleTipText","setCircleTipText","setSelected","right","bottom","useEffect","svg","parseInt","flat","domain","range","c","onDoubleClick","classNames","includes","onMouseEnter","length","idx","Math","floor","getHeight","onMouseLeave","onClick","filter","strokeOpacity","cx","cy","e","currentTarget","setAttribute","fromJSDate","toFormat","ticks","getCsv","url","a","fetch","then","s","csvParse","getDatasets","process","toApiUrl","sub","pos","slice","opts","headers","Origin","fetchCors","getResourceUri","json","resources","dates","Object","dset","dt","push","key","resourceUri","console","log","undefined","getDataProd","datasets","ds","csvRes","csv","getDataDev","isDev","getData","Side","Grid","item","md","sm","xs","Main","App","setData","fetchData","charts","container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.1a63618c.chunk.js","sourcesContent":["import Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    display: 'block',\r\n    margin: 'auto',\r\n    paddingTop: theme.spacing(3),\r\n    textAlign: 'center'\r\n  },\r\n}));\r\n\r\nconst Header = ({ siteTitle, subTitle }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <header className={classes.root}>\r\n      <Typography variant='h2' component=\"h1\" >\r\n        {siteTitle}\r\n      </Typography>\r\n      <Typography variant='h4' component=\"h4\" >\r\n        {subTitle}\r\n      </Typography>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import { min, max } from 'd3-array'\r\nimport { DateTime } from 'luxon'\r\nexport const keepKeys = (arr, keys) => arr.map(o => {\r\n    const res = {};\r\n    keys.forEach(k => res[k] = o[k]);\r\n    return res;\r\n});\r\nexport const unpack = (arr, key) => arr.map(o => o[key]);\r\nexport const makeId = str => str.replace(/\\s+/g, '-').toLowerCase()\r\nexport const getDataByTitle = (data, title) => data[data.map(o => o.title).indexOf(title)]\r\nexport const minMax = arr => [min(arr), max(arr)]\r\nexport const endOfMonth = monthString => DateTime.fromISO(monthString).plus({ months: 1, days: - 1 }).toJSDate()","import { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { makeId } from '../functions/helper'\r\nimport Scrollspy from 'react-scrollspy'\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    root: {\r\n      position: 'fixed',\r\n      paddingLeft: theme.spacing(1),\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    link: {\r\n      color: theme.palette.text.primary,\r\n      '&:hover': {\r\n        color: theme.palette.text.secondary,\r\n        borderLeft: `1px solid ${theme.palette.secondary.main}`\r\n      }\r\n    },\r\n    active: {\r\n      borderLeft: `2px solid ${theme.palette.secondary.main}`\r\n    }\r\n  }\r\n});\r\n\r\nfunction ListItemLink(props) {\r\n  return (\r\n    <Hidden smDown>\r\n      <ListItem component=\"a\" display='hidden' {...props} />\r\n    </Hidden>\r\n  );\r\n}\r\n\r\nfunction SideNav({ titles }) {\r\n  const classes = useStyles()\r\n  const ids = titles.map(o => makeId(o))\r\n  return (\r\n    <Scrollspy items={ids} currentClassName={classes.active} className={classes.root}>\r\n      {titles.map((title, i) => <ListItemLink key={ids[i]} className={classes.link} href={`#${ids[i]}`}><ListItemText primary={title}></ListItemText></ListItemLink>)}\r\n    </Scrollspy >\r\n  )\r\n}\r\n\r\nexport default SideNav\r\n\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: 'auto',\r\n        maxWidth: 1126,\r\n        padding: theme.spacing(4)\r\n    }\r\n}));\r\n\r\nfunction ContentWrapper({ children }) {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.root}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentWrapper","import { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: `${theme.spacing(2)}px auto`,\r\n        overflow: 'visible'\r\n    },\r\n    cardHelper: {\r\n        padding: theme.spacing(3),\r\n        position: \"relative\"\r\n    }\r\n}));\r\n\r\nfunction ChartWrapper({ children }) {\r\n    const classes = useStyles()\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent className={classes.cardHelper}>\r\n                {children}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ChartWrapper","import { rollup, sum } from 'd3-array';\r\nimport { keepKeys } from './helper';\r\nimport { endOfMonth } from '../functions/helper';\r\n\r\nexport function groupData(initData) {\r\n\tconst keys = ['Month', 'Type', 'Loans'];\r\n\tconst data = keepKeys(initData.data, keys);\r\n\treturn Array.from(\r\n\t\trollup(\r\n\t\t\tdata,\r\n\t\t\td => sum(d.map(d => +d.Loans)),\r\n\t\t\td => d.Type,\r\n\t\t\td => d.Month\r\n\t\t),\r\n\t\t([Type, m]) => ({\r\n\t\t\tType, data: Array.from(m, ([Month, Loans]) => ({ Month, Loans }))\r\n\t\t})\r\n\t);\r\n}\r\n\r\nexport function dataDates(d) {\r\n    d.forEach(row => {\r\n        row.data.forEach(r => {\r\n            const month = r.Month;\r\n            const jsDate = endOfMonth(month);\r\n            r.Month = jsDate;\r\n        });\r\n    });\r\n    return d;\r\n}\r\nexport function getHeight(d) {\r\n    const months = d.map(o => o.Month);\r\n    if (d.length % 2 === 0) {\r\n        return d[months.length / 2].Loans;\r\n    } else {\r\n        const idx = Math.floor(months.length / 2);\r\n        return (d[idx].Loans + d[idx + 1].Loans) / 2;\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => {\r\n    return {\r\n        tooltip: {\r\n            display: 'inline',\r\n            marginLeft: props => theme.spacing(3) + props.margin.left,\r\n            marginTop: props => theme.spacing(3) + props.margin.top,\r\n            position: 'absolute',\r\n            left: props => props.left ? props.left : 'auto',\r\n            top: props => props.top,\r\n            transform: \"translate(-50%, -50%)\",\r\n            visibility: props => props.visible ? 'visible' : 'hidden',\r\n            background: theme.palette.grey[900],\r\n            opacity: 0.5,\r\n            color: theme.palette.primary.contrastText,\r\n            borderRadius: theme.shape.borderRadius,\r\n            padding: theme.spacing(1)\r\n        }\r\n    }\r\n})\r\n\r\nfunction ChartTip(props) {\r\n    const classes = useStyles(props)\r\n    return <div className={classes.tooltip}>{props.children}</div>\r\n}\r\n\r\nexport default ChartTip","import { Children } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    xAxis: {\r\n        fill: 'none',\r\n        fontSize: 10,\r\n        fontFamily: 'inherit'\r\n    },\r\n    tickTextX: {\r\n        fontSize: '0.6rem',\r\n        stroke: 'none',\r\n        fill: 'currentColor',\r\n        textAnchor: 'middle'\r\n    },\r\n    tickTextY: {\r\n        fontSize: '0.6rem',\r\n        stroke: 'none',\r\n        fill: 'currentColor',\r\n        textAnchor: 'end'\r\n    }\r\n}))\r\n\r\nconst XAxis = ({ height, width, tickArray, scale, tickFunction }) => {\r\n    const classes = useStyles()\r\n    const x = scale\r\n    return (\r\n        <g className={classes.xAxis} transform={`translate(0, ${height})`}>\r\n            <line x1={0} x2={width} stroke='black' />\r\n            {Children.toArray(tickArray.map(t => (\r\n                <>\r\n                    <g transform={`translate(${x(t)}, 0)`}>\r\n                        <line y2=\"6\" stroke='currentColor' />\r\n                        <text className={classes.tickTextX} y=\"9\" dy=\"0.71em\">{tickFunction ? tickFunction(t) : t}</text>\r\n                    </g>\r\n                </>\r\n            )\r\n            ))\r\n            }\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default XAxis","import { Children } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    xAxis: {\r\n        fill: 'none',\r\n        fontSize: 10,\r\n        fontFamily: 'inherit'\r\n    },\r\n    tickTextX: {\r\n        fontSize: '0.6rem',\r\n        stroke: 'none',\r\n        fill: 'currentColor',\r\n        textAnchor: 'middle'\r\n    },\r\n    tickTextY: {\r\n        fontSize: '0.6rem',\r\n        stroke: 'none',\r\n        fill: 'currentColor',\r\n        textAnchor: 'end'\r\n    }\r\n}))\r\n\r\nconst YAxis = ({ height, tickArray, scale, tickFunction }) => {\r\n    const classes = useStyles()\r\n    const y = scale\r\n    return (\r\n        <g className={classes.yAxis} transform={`translate(0, 0)`}>\r\n            <line y1={0} y2={height} stroke='black' />\r\n            {Children.toArray(tickArray.map(t => (\r\n                <g transform={`translate(0, ${y(t)})`}>\r\n                    <line x2=\"-6\" stroke='currentColor' />\r\n                    <text className={classes.tickTextY} x=\"-10\" dy=\"0.32em\">{tickFunction ? tickFunction(t) : t}</text>\r\n                </g>\r\n            )\r\n            ))}\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default YAxis","const style = {\r\n    alignmentBaseline: 'middle',\r\n    textAnchor: 'middle',\r\n    fontSize: 'medium'\r\n}\r\n\r\nconst Title = ({children, ...props}) => <text style={style} {...props}>{children}</text>\r\n\r\nexport default Title","import { useEffect, useState, Children } from 'react'\r\nimport classNames from 'classnames';\r\nimport { groupData, dataDates, getHeight } from '../functions/loansByTypeHelp'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport ChartTip from './chartTip'\r\nimport { makeId, minMax } from '../functions/helper';\r\nimport { select } from 'd3-selection'\r\nimport { scaleLinear, scaleTime, scaleOrdinal } from 'd3-scale'\r\nimport { min, max } from 'd3-array'\r\nimport { line } from 'd3-shape'\r\nimport { schemeTableau10 } from 'd3-scale-chromatic'\r\nimport { axisLeft, axisBottom } from 'd3-axis'\r\nimport { DateTime } from 'luxon'\r\nimport XAxis from './xAxis'\r\nimport YAxis from './yAxis'\r\nimport Title from './title'\r\n\r\nconst d3 = {\r\n    select,\r\n    scaleLinear,\r\n    scaleOrdinal,\r\n    scaleTime,\r\n    min,\r\n    max,\r\n    line,\r\n    schemeTableau10,\r\n    axisLeft,\r\n    axisBottom\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '450px',\r\n    },\r\n    line: {\r\n        strokeWidth: 1.5,\r\n        fill: 'none',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            strokeWidth: 3\r\n        }\r\n    },\r\n    selected: {\r\n        strokeWidth: 3\r\n    },\r\n    circle: {\r\n        cursor: 'pointer'\r\n    },\r\n    legend: {\r\n        fill: 'none',\r\n        fontSize: 10,\r\n    },\r\n    legendText: {\r\n        fontSize: '0.6rem',\r\n        stroke: 'none',\r\n        textAnchor: 'end',\r\n    }\r\n}));\r\n\r\n\r\nfunction LoansByItemType({ data, title }) {\r\n    const id = 'svg-' + makeId(title)\r\n    const [chartData, setChartData] = useState(dataDates(groupData(data)))\r\n    const [width, setWidth] = useState(0)\r\n    const [height, setHeight] = useState(450)\r\n    const [lineTipY, setLineTipY] = useState(height / 2)\r\n    const [lineTipVisible, setLineTipVisible] = useState(false)\r\n    const [lineTipText, setLineTipText] = useState(\"\")\r\n    const [circleTipPos, setCircleTipPos] = useState([width / 2, height / 2])\r\n    const [circleTipVisible, setCircleTipVisible] = useState(false)\r\n    const [circleTipText, setCircleTipText] = useState({ type: '', month: '', loans: '' })\r\n    const [selected, setSelected] = useState([])\r\n    const margin = { top: 65, right: 10, bottom: 30, left: 75 };\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        const svg = d3.select(`#${id}`)\r\n        setWidth(parseInt(svg.style('width')) - margin.left - margin.right)\r\n        setHeight(parseInt(svg.style('height')) - margin.top - margin.bottom)\r\n    })\r\n    const months = chartData.map(o => o.data.map(x => x.Month))[0]\r\n    const loans = chartData.map(o => o.data.map(x => x.Loans)).flat()\r\n    const x = d3.scaleTime()\r\n        .domain(minMax(months))\r\n        .range([0, width])\r\n    const y = d3.scaleLinear()\r\n        .domain(minMax(loans))\r\n        .range([height, 0])\r\n    const line = d3.line()\r\n        .x(d => x(d.Month))\r\n        .y(d => y(d.Loans))\r\n    const c = d3.scaleOrdinal().domain(chartData.map(o => o.Type)).range(d3.schemeTableau10)\r\n\r\n    return (\r\n        <>\r\n            <svg onDoubleClick={() => setSelected([])} className={classes.root} id={id} width={width + margin.left + margin.right} height={height + margin.top + margin.bottom}>\r\n                <Title x={margin.left + width / 2} y={0.25 * margin.top}>{title}</Title>\r\n                <g style={{\r\n                    transform: `translate(${margin.left}px, ${margin.top}px)`\r\n                }}>\r\n                    <g>\r\n                        {Children.toArray(\r\n                            chartData.map(r =>\r\n                                (<>\r\n                                    <path\r\n                                        className={classNames(classes.line, { [classes.selected]: selected.includes(r.Type) })}\r\n                                        stroke={c(r.Type)}\r\n                                        d={line(r.data)}\r\n                                        onMouseEnter={() => {\r\n                                            setLineTipY(y(getHeight(r.data)))\r\n                                            setLineTipVisible(true)\r\n                                            setLineTipText(r.Type)\r\n                                        }}\r\n                                        onMouseLeave={() => {\r\n                                            setLineTipVisible(false)\r\n                                        }}\r\n                                        onClick={() => {\r\n                                            // let arr = selected\r\n                                            if (!selected.includes(r.Type)) {\r\n                                                setSelected([...selected, r.Type])\r\n                                            } else {\r\n                                                setSelected(selected.filter(x => x !== r.Type))\r\n                                            }\r\n\r\n                                        }}\r\n                                        strokeOpacity={selected.includes(r.Type) || selected.length < 1 ? 1 : 0.2}\r\n                                    />\r\n                                    <g>\r\n                                        {Children.toArray(\r\n                                            r.data.map(d => (\r\n                                                <circle\r\n                                                    className={classes.circle}\r\n                                                    r={1.5}\r\n                                                    cx={x(d.Month)}\r\n                                                    cy={y(d.Loans)}\r\n                                                    fill={c(r.Type)}\r\n                                                    onMouseEnter={e => {\r\n                                                        e.currentTarget.setAttribute('r', 3)\r\n                                                        setCircleTipPos([x(d.Month), y(d.Loans)])\r\n                                                        setCircleTipVisible(true)\r\n                                                        setCircleTipText({\r\n                                                            type: r.Type,\r\n                                                            month: d.Month,\r\n                                                            loans: d.Loans\r\n                                                        })\r\n                                                    }}\r\n                                                    onMouseLeave={e => {\r\n                                                        e.currentTarget.setAttribute('r', 1.5)\r\n                                                        setCircleTipVisible(false)\r\n                                                    }}\r\n                                                />\r\n                                            )\r\n                                            ))}\r\n                                    </g>\r\n                                </>)\r\n                            )\r\n                        )}\r\n                        <g className={classes.legend} transform={`translate(${width}, 0)`}>\r\n                            {Children.toArray(selected.map((t, i) =>\r\n                                <text className={classes.legendText} y={15 * (i)} fill={c(t)}>{t}</text>\r\n                            ))}\r\n                        </g>\r\n                    </g>\r\n                    <XAxis height={height} width={width} tickArray={months} tickFunction={t => DateTime.fromJSDate(t).toFormat('MMM yy')} scale={x} />\r\n                    <YAxis height={height} width={width} tickArray={y.ticks()} scale={y} />\r\n                    <text transform=\"rotate(-90)\" x={height/-2} y={-margin.left} dy={'1rem'} style={{textAnchor: 'middle'}}>Loans + renewals</text>\r\n                </g>\r\n            </svg>\r\n            <ChartTip margin={margin} top={lineTipY - 25} left={width / 2} visible={lineTipVisible}>\r\n                <Typography variant='caption'>\r\n                    {lineTipText}\r\n                </Typography>\r\n            </ChartTip>\r\n            <ChartTip margin={margin} left={circleTipPos[0]} top={circleTipPos[1] - 45} visible={circleTipVisible}>\r\n                <Typography variant='caption'>\r\n                    {`${circleTipText.type}`}<br />\r\n                    {`${DateTime.fromJSDate(circleTipText.month).toFormat('MMM y')}`}<br />\r\n                    {`Loans: ${circleTipText.loans}`}\r\n                </Typography>\r\n            </ChartTip>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoansByItemType","import { csvParse } from 'd3'\r\nimport { DateTime } from 'luxon'\r\n\r\nconst getCsv = async url => await fetch(url).then(s => s.text()).then(s => csvParse(s))\r\nconst getDatasets = async () => await getCsv(`${process.env.PUBLIC_URL}/datasets.csv`)\r\nconst insertAt = (str, sub, pos) => `${str.slice(0, pos)}${sub}${str.slice(pos)}`;\r\n\r\nconst toApiUrl = (url) => {\r\n    const root = 'https://open.barnet.gov.uk/'\r\n    return insertAt(url, 'api/', root.length)\r\n}\r\n\r\nconst corsUrl = 'https://cors-anywhere.herokuapp.com/'\r\nconst headers = {\r\n    Origin: process.env.PUBLIC_URL\r\n}\r\nconst opts = { headers }\r\nconst fetchCors = async url => await fetch(corsUrl + url, opts)\r\n\r\nasync function getResourceUri(url) {\r\n    try {\r\n        const res = await fetchCors(toApiUrl(url))\r\n        const d = await res.json()\r\n        const resources = d.resources\r\n        const keys = []\r\n        const dates = []\r\n        for (const k of Object.keys(resources)) {\r\n            const dset = resources[k]\r\n            const dt = DateTime.fromISO(dset['qa']['timestamp'].slice(0, 'yyyy-mm-dd'.length))\r\n            dates.push(dt)\r\n            keys.push(k)\r\n        }\r\n        const key = keys[dates.indexOf(DateTime.max(...dates))]\r\n        const resourceUri = resources[key]['url']\r\n        return resourceUri\r\n    } catch (e) {\r\n        console.log(e)\r\n        return undefined\r\n    }\r\n}\r\n\r\nasync function getDataProd() {\r\n    const datasets = await getDatasets()\r\n    const data = []\r\n    for (const ds of datasets) {\r\n        const { url } = ds\r\n        const resourceUri = await getResourceUri(url)\r\n        try {\r\n            const csvRes = await fetchCors(resourceUri)\r\n            const csv = await csvRes.text().then(s => csvParse(s))\r\n            ds.data = csv\r\n            data.push(ds)\r\n        } catch (e) {\r\n            console.log(e)\r\n            data.push(undefined)\r\n            continue\r\n        }\r\n    }\r\n    return data\r\n}\r\n\r\nasync function getDataDev() {\r\n    const datasets = await getDatasets()\r\n    const data = []\r\n    for (const ds of datasets) {\r\n        const { title } = ds\r\n        const csv = await getCsv(`${process.env.PUBLIC_URL}/data/${title}.csv`)\r\n        ds.data = csv\r\n        data.push(ds)\r\n    }\r\n    return data\r\n}\r\n\r\nasync function getData(isDev) {\r\n    return isDev ? await getDataDev() : await getDataProd()\r\n}\r\n\r\nexport default getData","import { useEffect, useState, Children } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Header from \"./components/header\"\r\nimport SideNav from './components/sideNav'\r\nimport ContentWrapper from './components/contentWrapper'\r\nimport ChartWrapper from './components/chartWrapper'\r\nimport LoansByItemType from './components/loansByItemType'\r\nimport getData from './functions/getData'\r\nimport { getDataByTitle, makeId } from './functions/helper'\r\n\r\nconst isDev = process.env.NODE_ENV==='development'\r\n// const isDev = false\r\n\r\nconst Side = ({ children }) => <Grid item md={2} sm={false} xs={false}>{children}</Grid>\r\nconst Main = ({ children }) => <Grid item md={10} sm={12} xs={12}>{children}</Grid>\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([])\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const d = await getData(isDev)\r\n      setData(d)\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  // const figures = writeFigures(data)\r\n  const charts = [\r\n    {\r\n      title: 'Loans by item type',\r\n      component: (props) => <LoansByItemType {...props} data={getDataByTitle(data, 'Library loans')} />\r\n    }\r\n  ]\r\n  return (\r\n    <Grid container>\r\n      <Side><SideNav titles={charts.map(o => o.title)} /></Side>\r\n      <Main>\r\n        <Header siteTitle='Barnet Libraries' subTitle='Open data' />\r\n        <ContentWrapper>\r\n          {\r\n            Children.toArray(\r\n              charts.map(({ title, component }, i) => (\r\n                <section id={makeId(title)}>\r\n                  <ChartWrapper>\r\n                    {data.length > 0 ? component({ title }) : null}\r\n                  </ChartWrapper>\r\n                </section>\r\n              )\r\n              )\r\n            )\r\n          }\r\n        </ContentWrapper>\r\n      </Main>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({});\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>\r\n  ,\r\n  document.querySelector('#root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}